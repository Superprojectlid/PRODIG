# Reading H:/modelsim/modelsim_ase/tcl/vsim/pref.tcl 
# do PRODIGgroep4_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying H:\modelsim\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied H:\modelsim\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/School/Github/PRODIG/ADC.vhd}
# Model Technology ModelSim ALTERA vcom 10.0c Compiler 2011.09 Sep 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity ADC
# -- Compiling architecture hardware of ADC
# 
# do "C:/School/Github/PRODIG/Test.txt"
# Name: tb_tut_minmax.do 
# Description: script for running simulation 
# Date: <the date> 
# Author: <your name> 
# Set transcript on 
# transcript on 
# Recreate the work directory and map to work 
# if {[file exists rtl_work]} { 
#  vdel -lib rtl_work -all 
# } 
# vlib rtl_work 
# vmap work rtl_work 
# Modifying modelsim.ini
# Compile the Tutorial description and testbench. Note the double 
# parent references in the path name 
# vcom -2008 -work work ../../ADC.vhd 
# Model Technology ModelSim ALTERA vcom 10.0c Compiler 2011.09 Sep 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity ADC
# -- Compiling architecture hardware of ADC
# vcom -2008 -work work ../../Sim.vhd 
# Model Technology ModelSim ALTERA vcom 10.0c Compiler 2011.09 Sep 21 2011
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity Sim
# -- Compiling architecture behav of Sim
# Start the simulator with 1 ns time resolution 
# vsim -t 1ns -L rtl_work -L work -voptargs="+acc" Sim
# vsim -L rtl_work -L work -voptargs=\"+acc\" -t 1ns Sim 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading work.sim(behav)
# Loading work.adc(hardware)
# Log all signals in the design, good if the number
# of signals is small. 
# add log -r * 
# Add all toplevel signals to the list view 
# Add a number of signals of the simulated design 
# add list * 
# add list dut/* 
# Add all toplevel signals to the wave view 
# Add a number of signals inside the simulated design 
# add wave -divider "Inputs" 
# add wave Clk_10k
# add wave reset
# add wave DB
# add wave Busy 
# 
# add wave -divider "intern"
# add wave dut/state
# add wave dut/Buf
# 
# add wave -divider "Outputs" 
# add wave conv
# add wave rd
# add wave data
# 
# Open Structure, List and Waveform window 
# view structure 
# .main_pane.structure.interior.cs.body.struct
# view list 
# .main_pane.list.interior.cs.body
# view wave 
# .main_pane.wave.interior.cs.body.pw.wf
# Run simulation for 600 ns 
# run 10 ms 
# Fill up the wa
#  
